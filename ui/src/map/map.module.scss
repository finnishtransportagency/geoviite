@import '../vayla-design-lib/colors';
@import '../vayla-design-lib/shadows';
@import '../vayla-design-lib/typography';
@import '../vayla-design-lib/menu/menu';
@import '../geoviite-design-lib/geoviite-colors';

$font-family: 'Open Sans';

$color-geometry-green-default: #4abc4a;
$color-geometry-green-dark: #008e00;

$color-geometry-red-default: #e07764;
$color-geometry-red-dark: #ab1a00;

$color-highlight-red: #e53e27;
$color-highlight-blue: #389bf6;

// Export colors to use e.g. in map canvas
:export {
    planAreaBorder: $color-red-default;
    planAreaTextColor: $color-black-default;
    fontFamily: $font-family;
}

//Linking layer
:export {
    linkingPoint: $color-white-default;
    unselectedAlignmentInterval: $color-white-darker;
    selectedLayoutAlignmentInterval: $color-geoviite-blue;
    selectedGeometryAlignmentInterval: $color-red-dark;

    clusterPointTextColor: $color-white-default;
    clusterPointBorder: $color-white-default;
    clusterPoint: $color-white-darker;

    locationTrackEndPoint: $color-red-default;
    locationTrackEndPointBorder: $color-red-darker;
    locationTrackEndPointCross: $color-white-default;
}

// Alignment styling
:export {
    unlinkedGeometryAlignment: $color-geometry-red-default;
    selectedUnlinkedGeometryAlignment: $color-geometry-red-dark;

    linkedGeometryAlignment: $color-geometry-green-default;
    selectedLinkedGeometryAlignment: $color-geometry-green-dark;

    alignmentBackground: $color-white-default;

    alignmentLine: rgba($color-black-default, 0.8);
    selectedAlignmentLine: $color-geoviite-blue;

    alignmentRedHighlight: rgba($color-highlight-red, 0.2);
    alignmentBlueHighlight: rgba($color-highlight-blue, 0.2);
}

// Alignment badge styling
:export {
    /* prettier-ignore */
    alignmentBadge: {
        @include typography-body-strong;
    }
    alignmentBadge: $color-black-default;
    alignmentBadgeWhite: $color-white-default;
    alignmentBadgeBlue: $color-geoviite-blue;
    alignmentBadgeBorder: $color-black-lighter;

    alignmentBadgeWhiteTextColor: $color-white-default;
    alignmentBadgeTextColor: $color-black-default;
}

// Km post styling
:export {
    /* prettier-ignore */
    kmPost: {
        @include typography-body-strong;
    }

    kmPostTextColor: $color-black-default;
    kmPostLabel: rgba($color-white-default, 0.6);

    unlinkedKmPostLabel: rgba($color-red-lighter, 0.6);
    linkedKmPostLabel: rgba($color-green-lighter, 0.6);

    selectedKmPostLabel: $color-white-default;
    selectedKmPostLabelBorder: rgba($color-black-default, 0.6);

    selectedKmPostDot: $color-geoviite-blue;
    selectedKmPostDotBorder: rgba($color-black-default, 0.2);

    selectedUnlinkedKmPostLabel: $color-red-lighter;
    selectedLinkedKmPostLabel: $color-green-lighter;
}

// Switch styling
:export {
    switchTextColor: $color-black-default;
    switchBackground: $color-black-lighter;

    switchLabel: $color-geoviite-cadmium-lighter;
    switchLabelBorder: rgba($color-black-default, 0.5);
    linkedSwitchLabel: $color-green-lighter;
    unlinkedSwitchLabel: $color-red-lighter;

    switchJoint: $color-geoviite-cadmium;
    switchJointBorder: rgba($color-black-default, 0.5);
    switchJointTextColor: $color-black-default;

    switchMainJoint: $color-geoviite-blue;
    switchMainJointBorder: scale-color($color-geoviite-blue, $lightness: -40%);
    switchMainJointTextColor: $color-white-default;

    linkedSwitchJoint: $color-green-default;
    linkedSwitchJointBorder: $color-green-dark;
    unlinkedSwitchJoint: $color-red-default;
    unlinkedSwitchJointBorder: $color-red-dark;
}

//Measure tooltip styling
:export {
    measurementTooltipLine: $color-black-lighter;
    measurementTooltipCircle: $color-black-light;
}

.map {
    position: relative;
    color: $color-black-default;
    width: 100%;
    height: 100%;
    z-index: 1;
}

.map__ol-map {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

.map .ol-scale-line {
    left: auto;
    right: 18px;
    background-color: rgba($color-white-default, 0.6);
    padding: 4px 8px;

    .ol-scale-line-inner {
        @include typography-body-strong;

        color: $color-black-default;
        margin: 0;
        border: 2px solid $color-black-default;
        border-top: none;
        border-bottom-left-radius: 2px;
        border-bottom-right-radius: 2px;
    }
}

.ol-zoom {
    background-color: rgba($color-white-default, 0.6);
    padding: 2px 4px;
    margin: 0;
    top: 5px;
    left: 10px;

    .ol-zoom-in,
    .ol-zoom-out {
        margin: 2px 0;
        cursor: pointer;
        background-color: $color-blue-default;

        &:focus {
            background-color: $color-blue-default;
        }

        &:hover {
            background-color: $color-blue-light;
        }
    }
}

.map__popup-menu {
    @extend .menu;
    background: $color-blue-darker;
}

.map__popup-item {
    @extend .menu__item;
    background: $color-blue-darker;
    color: $color-white-default;
    border-bottom-color: $color-black-lighter;

    &:hover {
        background: $color-blue-dark !important;
    }
}

.map__map-tools {
    position: absolute;
    top: 5px;
    right: 15px;
    z-index: 20;
    list-style: none;
    margin: 0;
    padding: 2px;
    border-radius: 4px;

    background-color: rgba($color-white-default, 0.6);
}

.map__map-tool {
    cursor: pointer;
    padding: 2px;
    line-height: 0;

    &:not(:last-child) {
        margin-bottom: 6px;
    }

    .icon {
        fill: $color-black-default;
    }

    &:hover,
    &--active {
        .icon {
            fill: $color-blue-dark;
        }
    }
}

.ol-tooltip-measure {
    @include typography-caption;

    color: $color-white-default;
    background-color: rgba($color-black-default, 0.6);
    padding: 2px 6px;
    border-radius: 4px;
}

.map__loading-spinner {
    position: absolute;
    top: 10px;
    left: 40px;
}
