-- switches

alter table layout.switch
  disable trigger version_update_trigger;
alter table layout.switch
  disable trigger version_row_trigger;

create table layout.switch_id
(
  id int not null primary key generated by default as identity
);
insert into layout.switch_id (
  select distinct id
    from layout.switch_version
);
select
  from (
    select
      nextval('layout.switch_id_id_seq'),
      generate_series(1, (
        select max(id)
          from layout.switch_id
      ))
  ) forward_ids;

alter table layout.switch
  alter column layout_context_id drop expression, -- turn generated column into an ordinary column
  add constraint layout_context_id_check check (layout.layout_context_id(design_id, draft) = layout_context_id);

alter table layout.switch
  drop constraint switch_design_row_fk,
  drop constraint switch_official_row_id_fkey,
  drop constraint switch_official_id_fkey;

alter table publication.switch
  drop constraint publication_switch_switch_fk,
  add constraint publication_switch_switch_fk
    foreign key (switch_id) references layout.switch_id (id);

alter table layout.location_track
  drop constraint location_track_topology_start_switch_id_fkey,
  add constraint location_track_topology_start_switch_id_fkey
    foreign key (topology_start_switch_id) references layout.switch_id (id),
  drop constraint location_track_topology_end_switch_id_fkey,
  add constraint location_track_topology_end_switch_id_fkey
    foreign key (topology_end_switch_id) references layout.switch_id (id);

alter table integrations.ratko_push_error
  drop constraint ratko_push_error_switch_id_fkey,
  add constraint ratko_push_error_switch_id_fkey
    foreign key (switch_id) references layout.switch_id (id);

alter table publication.split_relinked_switch
  drop constraint split_switch_fkey,
  add constraint split_switch_fkey
    foreign key (switch_id) references layout.switch_id (id);

alter table layout.switch
  alter column id drop identity;
alter table layout.switch
  drop constraint switch_pkey,
  drop constraint switch_id_version_unique;

update layout.switch
set id = official_id, version = last_version.version
  from layout.switch_version last_version
  where switch.official_id = last_version.id
    and switch.layout_context_id = last_version.layout_context_id
    and not exists (
    select *
      from layout.switch_version future_version
      where future_version.id = last_version.id
        and future_version.layout_context_id = last_version.layout_context_id
        and future_version.version > last_version.version
  );

alter table layout.switch
  add constraint layout_switch_pkey primary key (id, layout_context_id),
  add constraint layout_switch_id_fkey foreign key (id) references layout.switch_id (id),
  add constraint switch_id_version_unique unique (id, layout_context_id, version);

alter table layout.switch_joint
  add constraint switch_joint_switch_id_fkey foreign key (switch_id, switch_layout_context_id, switch_version)
    references layout.switch (id, layout_context_id, version)
    on delete cascade deferrable initially deferred;

alter table layout.switch
  add column origin_design_id int;
update layout.switch
set origin_design_id = design_row.design_id
  from layout.switch design_row
  where design_row.id = switch.design_row_id;

alter table layout.switch
  drop column official_id;
alter table layout.switch
  drop column design_row_id;
alter table layout.switch
  drop column official_row_id;

alter table layout.switch
  enable trigger version_update_trigger;
alter table layout.switch
  enable trigger version_row_trigger;

drop function layout.get_switch_version(int);
select common.create_version_fetch_function('layout', 'switch');
